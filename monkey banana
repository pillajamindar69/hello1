from itertools import permutations


graph = [
    [0, 10, 15, 20],
    [10, 0, 35, 25],
    [15, 35, 0, 30],
    [20, 25, 30, 0]
]


n = len(graph)

start = 0


cities = list(range(n))
cities.remove(start)


min_path_cost = float('inf')
best_path = []


for perm in permutations(cities):
    current_cost = 0
    k = start

    
    for j in perm:
        current_cost += graph[k][j]
        k = j
    
    current_cost += graph[k][start]

    
    if current_cost < min_path_cost:
        min_path_cost = current_cost
        best_path = [start] + list(perm) + [start]


print("Minimum cost:", min_path_cost)
print("Path:", best_path)
